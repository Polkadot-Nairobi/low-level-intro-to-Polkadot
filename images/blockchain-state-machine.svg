<svg viewBox="0 0 1400 900" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1400" height="900" fill="#0f0f0f"/>
  
  <!-- Title -->
  <text x="700" y="30" text-anchor="middle" fill="#00d4ff" font-size="28" font-weight="bold">Blockchain as a Distributed State Machine</text>
  
  <!-- Mathematical Definition Box -->
  <rect x="50" y="60" width="500" height="200" fill="#1a1a1a" stroke="#333" stroke-width="2" rx="10"/>
  <text x="70" y="85" fill="#ffaa00" font-size="16" font-weight="bold">Formal Definition</text>
  <text x="70" y="110" fill="#ccc" font-size="14">DSM = (S, Σ, δ, s₀, F)</text>
  <text x="70" y="135" fill="#ccc" font-size="12">S = Set of all possible states</text>
  <text x="70" y="155" fill="#ccc" font-size="12">Σ = Input alphabet (transactions/extrinsics)</text>
  <text x="70" y="175" fill="#ccc" font-size="12">δ: S × Σ → S (state transition function)</text>
  <text x="70" y="195" fill="#ccc" font-size="12">s₀ = Initial state (genesis block)</text>
  <text x="70" y="215" fill="#ccc" font-size="12">F = Set of final/accepting states</text>
  <text x="70" y="240" fill="#888" font-size="10">δ(sᵢ, block) = sᵢ₊₁ (deterministic transition)</text>
  
  <!-- State Transition Diagram -->
  <g id="state-transitions">
    <!-- Initial State s0 -->
    <circle cx="150" cy="350" r="40" fill="#e6007a" stroke="#ff1493" stroke-width="3"/>
    <text x="150" y="348" text-anchor="middle" fill="white" font-size="14" font-weight="bold">s₀</text>
    <text x="150" y="365" text-anchor="middle" fill="white" font-size="10">Genesis</text>
    <text x="150" y="410" text-anchor="middle" fill="#ccc" font-size="10">Initial State</text>
    
    <!-- State s1 -->
    <circle cx="350" cy="350" r="40" fill="#00d4ff" stroke="#0099cc" stroke-width="3"/>
    <text x="350" y="348" text-anchor="middle" fill="white" font-size="14" font-weight="bold">s₁</text>
    <text x="350" y="365" text-anchor="middle" fill="white" font-size="10">Block 1</text>
    
    <!-- State s2 -->
    <circle cx="550" cy="350" r="40" fill="#00d4ff" stroke="#0099cc" stroke-width="3"/>
    <text x="550" y="348" text-anchor="middle" fill="white" font-size="14" font-weight="bold">s₂</text>
    <text x="550" y="365" text-anchor="middle" fill="white" font-size="10">Block 2</text>
    
    <!-- State s3 -->
    <circle cx="750" cy="350" r="40" fill="#00d4ff" stroke="#0099cc" stroke-width="3"/>
    <text x="750" y="348" text-anchor="middle" fill="white" font-size="14" font-weight="bold">s₃</text>
    <text x="750" y="365" text-anchor="middle" fill="white" font-size="10">Block 3</text>
    
    <!-- State sn -->
    <circle cx="950" cy="350" r="40" fill="#00d4ff" stroke="#0099cc" stroke-width="3"/>
    <text x="950" y="348" text-anchor="middle" fill="white" font-size="14" font-weight="bold">sₙ</text>
    <text x="950" y="365" text-anchor="middle" fill="white" font-size="10">Block n</text>
    
    <!-- Transition arrows -->
    <defs>
      <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
        <polygon points="0 0, 10 3.5, 0 7" fill="#ffaa00"/>
      </marker>
    </defs>
    
    <!-- Transition lines -->
    <line x1="190" y1="350" x2="310" y2="350" stroke="#ffaa00" stroke-width="3" marker-end="url(#arrowhead)"/>
    <line x1="390" y1="350" x2="510" y2="350" stroke="#ffaa00" stroke-width="3" marker-end="url(#arrowhead)"/>
    <line x1="590" y1="350" x2="710" y2="350" stroke="#ffaa00" stroke-width="3" marker-end="url(#arrowhead)"/>
    <line x1="790" y1="350" x2="910" y2="350" stroke="#ffaa00" stroke-width="3" marker-end="url(#arrowhead)"/>
    
    <!-- Transition labels -->
    <text x="250" y="335" text-anchor="middle" fill="#ffaa00" font-size="12" font-weight="bold">δ(s₀, B₁)</text>
    <text x="450" y="335" text-anchor="middle" fill="#ffaa00" font-size="12" font-weight="bold">δ(s₁, B₂)</text>
    <text x="650" y="335" text-anchor="middle" fill="#ffaa00" font-size="12" font-weight="bold">δ(s₂, B₃)</text>
    <text x="850" y="335" text-anchor="middle" fill="#ffaa00" font-size="12" font-weight="bold">δ(sₙ₋₁, Bₙ)</text>
    
    <!-- Continuation dots -->
    <circle cx="1100" cy="350" r="3" fill="#666"/>
    <circle cx="1120" cy="350" r="3" fill="#666"/>
    <circle cx="1140" cy="350" r="3" fill="#666"/>
  </g>
  
  <!-- Block Structure -->
  <g id="block-structure">
    <!-- Block 1 detailed -->
    <rect x="250" y="450" width="200" height="120" fill="#2a2a2a" stroke="#555" stroke-width="2" rx="8"/>
    <text x="350" y="470" text-anchor="middle" fill="#ffaa00" font-size="14" font-weight="bold">Block B₁</text>
    
    <!-- Block header -->
    <rect x="260" y="480" width="180" height="30" fill="#4a4a4a" stroke="#666" stroke-width="1" rx="3"/>
    <text x="270" y="498" fill="#ccc" font-size="10">Header: Hash(B₀), Timestamp, Nonce</text>
    
    <!-- Transactions -->
    <rect x="260" y="520" width="180" height="40" fill="#1a3a5a" stroke="#2a4a6a" stroke-width="1" rx="3"/>
    <text x="270" y="535" fill="#ccc" font-size="10">Transactions (Σ):</text>
    <text x="270" y="548" fill="#ccc" font-size="9">• Transfer(Alice → Bob, 100)</text>
    <text x="270" y="558" fill="#ccc" font-size="9">• Contract_Call(0x123...)</text>
    
    <!-- Block hash -->
    <rect x="260" y="450" width="180" height="20" fill="#e6007a" stroke="#ff1493" stroke-width="1" rx="3"/>
    <text x="270" y="463" fill="white" font-size="10">Hash: 0x4a7b2c9d...</text>
  </g>
  
  <!-- State Storage Representation -->
  <g id="state-storage">
    <!-- Storage at s1 -->
    <rect x="250" y="590" width="200" height="100" fill="#1a2a1a" stroke="#2a4a2a" stroke-width="2" rx="8"/>
    <text x="350" y="610" text-anchor="middle" fill="#00ff88" font-size="14" font-weight="bold">State s₁ (Storage)</text>
    <text x="260" y="630" fill="#ccc" font-size="10">Account Balances:</text>
    <text x="260" y="645" fill="#ccc" font-size="9">Alice: 900 DOT</text>
    <text x="260" y="655" fill="#ccc" font-size="9">Bob: 1100 DOT</text>
    <text x="260" y="670" fill="#ccc" font-size="9">Contract 0x123: Active</text>
    <text x="260" y="680" fill="#888" font-size="8">State Root: 0x8f3e4d...</text>
  </g>
  
  <!-- Cryptographic Hash Chain -->
  <g id="hash-chain">
    <rect x="750" y="450" width="600" height="200" fill="#1a1a2a" stroke="#333" stroke-width="2" rx="10"/>
    <text x="1050" y="475" text-anchor="middle" fill="#9d4edd" font-size="16" font-weight="bold">Cryptographic Hash Chain</text>
    
    <!-- Hash blocks -->
    <rect x="770" y="490" width="120" height="40" fill="#4a4a4a" stroke="#666" stroke-width="1" rx="5"/>
    <text x="830" y="505" text-anchor="middle" fill="#ccc" font-size="10">Block 0</text>
    <text x="830" y="520" text-anchor="middle" fill="#ffaa00" font-size="8">H₀: 0x1a2b3c...</text>
    
    <rect x="920" y="490" width="120" height="40" fill="#4a4a4a" stroke="#666" stroke-width="1" rx="5"/>
    <text x="980" y="505" text-anchor="middle" fill="#ccc" font-size="10">Block 1</text>
    <text x="980" y="520" text-anchor="middle" fill="#ffaa00" font-size="8">H₁: 0x4d5e6f...</text>
    
    <rect x="1070" y="490" width="120" height="40" fill="#4a4a4a" stroke="#666" stroke-width="1" rx="5"/>
    <text x="1130" y="505" text-anchor="middle" fill="#ccc" font-size="10">Block 2</text>
    <text x="1130" y="520" text-anchor="middle" fill="#ffaa00" font-size="8">H₂: 0x7g8h9i...</text>
    
    <rect x="1220" y="490" width="120" height="40" fill="#4a4a4a" stroke="#666" stroke-width="1" rx="5"/>
    <text x="1280" y="505" text-anchor="middle" fill="#ccc" font-size="10">Block 3</text>
    <text x="1280" y="520" text-anchor="middle" fill="#ffaa00" font-size="8">H₃: 0xajbkcl...</text>
    
    <!-- Hash chain arrows -->
    <line x1="890" y1="510" x2="920" y2="510" stroke="#9d4edd" stroke-width="2" marker-end="url(#arrowhead)"/>
    <line x1="1040" y1="510" x2="1070" y2="510" stroke="#9d4edd" stroke-width="2" marker-end="url(#arrowhead)"/>
    <line x1="1190" y1="510" x2="1220" y2="510" stroke="#9d4edd" stroke-width="2" marker-end="url(#arrowhead)"/>
    
    <!-- Hash function representation -->
    <text x="1050" y="560" text-anchor="middle" fill="#9d4edd" font-size="12">H(Block_i) = Hash(H(Block_{i-1}) + Transactions_i + Metadata_i)</text>
    
    <!-- Immutability explanation -->
    <text x="1050" y="585" text-anchor="middle" fill="#ff6b6b" font-size="11">Immutability: Any change to Block_i invalidates all subsequent hashes</text>
    <text x="1050" y="605" text-anchor="middle" fill="#ccc" font-size="10">Tamper Detection: Hash chain breaks → Fraud detected</text>
  </g>
  
  <!-- Deterministic Property -->
  <g id="deterministic">
    <rect x="50" y="720" width="400" height="80" fill="#2a1a1a" stroke="#4a2a2a" stroke-width="2" rx="8"/>
    <text x="250" y="740" text-anchor="middle" fill="#ff6b6b" font-size="14" font-weight="bold">Deterministic Property</text>
    <text x="60" y="760" fill="#ccc" font-size="12">∀ state s, ∀ block B: δ(s, B) produces exactly one result</text>
    <text x="60" y="775" fill="#ccc" font-size="11">Same input + same state = same output (no ambiguity)</text>
    <text x="60" y="790" fill="#888" font-size="10">Critical for distributed consensus across network nodes</text>
  </g>
  
  <!-- Consensus Property -->
  <g id="consensus">
    <rect x="480" y="720" width="400" height="80" fill="#1a2a1a" stroke="#2a4a2a" stroke-width="2" rx="8"/>
    <text x="680" y="740" text-anchor="middle" fill="#00ff88" font-size="14" font-weight="bold">Distributed Consensus</text>
    <text x="490" y="760" fill="#ccc" font-size="12">All honest nodes reach agreement on state sₙ</text>
    <text x="490" y="775" fill="#ccc" font-size="11">Permissionless participation with Byzantine fault tolerance</text>
    <text x="490" y="790" fill="#888" font-size="10">Shared dataset represents global truth</text>
  </g>
  
  <!-- Polkadot Connection -->
  <g id="polkadot-connection">
    <rect x="920" y="720" width="400" height="80" fill="#2a1a2a" stroke="#4a2a4a" stroke-width="2" rx="8"/>
    <text x="1120" y="740" text-anchor="middle" fill="#e6007a" font-size="14" font-weight="bold">Polkadot Architecture</text>
    <text x="930" y="760" fill="#ccc" font-size="12">Each parachain = independent state machine</text>
    <text x="930" y="775" fill="#ccc" font-size="11">Relay chain coordinates state transitions</text>
    <text x="930" y="790" fill="#888" font-size="10">Shared security across heterogeneous state machines</text>
  </g>
  
  <!-- Input Alphabet (Transactions) -->
  <g id="input-alphabet">
    <rect x="1150" y="280" width="200" height="120" fill="#2a2a1a" stroke="#555" stroke-width="2" rx="8"/>
    <text x="1250" y="300" text-anchor="middle" fill="#ffaa00" font-size="14" font-weight="bold">Input Alphabet Σ</text>
    <text x="1160" y="320" fill="#ccc" font-size="11">Transaction Types:</text>
    <text x="1160" y="335" fill="#ccc" font-size="10">• Balance Transfer</text>
    <text x="1160" y="350" fill="#ccc" font-size="10">• Smart Contract Call</text>
    <text x="1160" y="365" fill="#ccc" font-size="10">• Staking Operation</text>
    <text x="1160" y="380" fill="#ccc" font-size="10">• Governance Vote</text>
    <text x="1160" y="395" fill="#888" font-size="9">Extrinsics in Substrate</text>
  </g>
  
  <!-- State space indicator -->
  <text x="700" y="400" text-anchor="middle" fill="#666" font-size="12">State Space S = {s₀, s₁, s₂, ..., sₙ, ...} (potentially infinite)</text>
  
  <!-- Time arrow -->
  <line x1="100" y1="420" x2="1000" y2="420" stroke="#666" stroke-width="1" marker-end="url(#arrowhead)"/>
  <text x="1010" y="425" fill="#666" font-size="10">Time →</text>
  
  <!-- Mathematical notation for state evolution -->
  <text x="700" y="830" text-anchor="middle" fill="#888" font-size="12">State Evolution: s₀ →^{B₁} s₁ →^{B₂} s₂ →^{B₃} s₃ → ... → sₙ</text>
  <text x="700" y="850" text-anchor="middle" fill="#888" font-size="10">Where each transition is governed by: sᵢ₊₁ = δ(sᵢ, Bᵢ₊₁)</text>
  <text x="700" y="870" text-anchor="middle" fill="#666" font-size="10">Every valid block represents a new, agreed-upon global state</text>
</svg>